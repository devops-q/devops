services:
  app:
    image: ${DOCKER_IMAGE}
    ports:
      - "80:80"
    environment:
      - PORT=80
      - ENVIRONMENT=production
      - GIN_MODE=release
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_SSL_MODE=require
      - INITIAL_API_USER=${INITIAL_API_USER}
      - INITIAL_API_PASSWORD=${INITIAL_API_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:v3.2.1
    volumes:
      - type: bind
        source: /root/prometheus/
        target: /etc/prometheus/
        consistency: consistent
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.config.file=/etc/prometheus/web.yml'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.5.2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ROOT_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      - loki
    networks:
      - loki_network

  loki:
    image: grafana/loki:2.9.13
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
      - /root/configs/loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml
    hostname: loki
    networks:
      - loki_network

  alloy:
    image: grafana/alloy:v1.7.5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - alloy-data:/var/lib/alloy
      - /root/configs/alloy-config.alloy:/etc/alloy/config.river
    ports:
      - "12345:12345"
    command: run --server.http.listen-addr=0.0.0.0:12345 /etc/alloy/config.river
    depends_on:
      - loki
    networks:
      - loki_network

volumes:
  grafana-storage:
  loki-data:
  alloy-data:

networks:
  loki_network:
    driver: overlay
    attachable: true