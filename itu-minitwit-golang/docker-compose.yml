services:
  postgres:
    image: postgres:17.0-alpine3.20
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "test" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  app:
    image: test:latest
    ports:
      - "80:80"
    environment:
      - PORT=80
      - ENVIRONMENT=test
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=test
      - DB_PORT=5432
      - INITIAL_API_USER=test
      - INITIAL_API_PASSWORD=test_password
    depends_on:
      - postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus
    volumes:
      - type: bind
        source: ./mounts/prometheus/
        target: /etc/prometheus/
        consistency: consistent
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.config.file=/etc/prometheus/web.yml'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ROOT_PASSWORD}
#      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      - loki
    networks:
      - loki_network

  loki:
    image: grafana/loki:2.9.13
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yaml
    hostname: loki
    networks:
      - loki_network
    configs:
      - source: loki_config
        target: /etc/loki/loki-config.yaml

  alloy:
    image: grafana/alloy:v1.7.5
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - alloy-data:/var/lib/alloy
    ports:
      - "12345:12345"
    command: run --server.http.listen-addr=0.0.0.0:12345 /etc/alloy/config.river
    configs:
      - source: alloy_config
        target: /etc/alloy/config.river
    depends_on:
      - loki
    networks:
      - loki_network
volumes:
  grafana-storage:
  loki-data:
  alloy-data:
  postgres_data:

networks:
  loki_network:
    driver: overlay
    attachable: true

configs:
  loki_config:
    file: ./loki-stack-configs/loki-config.yaml
  alloy_config:
    file: loki-stack-configs/alloy-config.alloy