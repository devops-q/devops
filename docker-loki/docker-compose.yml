services:
  postgres:
    image: postgres:17.0-alpine3.20
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "test"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  web-app:
    build:
      context: ../itu-minitwit-golang
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - PORT=80
      - ENVIRONMENT=test
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=test
      - DB_PORT=5432
      - INITIAL_API_USER=test
      - INITIAL_API_PASSWORD=test_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

logging:
  driver: loki
  options:
    loki-url: "https://<user_id>:<password>@<loki_url>/loki/api/v1/push"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
